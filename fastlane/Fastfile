default_platform(:mac)

platform :mac do
  
  before_all do
    ENV["APP_NAME"] = "KAI"
    ENV["APP_VERSION"] = last_git_tag
    ENV["SYS_MIN_VERSION"] = "12.0"
    ENV["BUILD_PATH"] = "./build"
  end

  lane :create_dmg do
    setup
    build
    clean
    sh "cd .. && zsh ./scripts/create_dmg.sh"
  end

  private_lane :setup do

    name = ENV["APP_NAME"]
    version = ENV["APP_VERSION"]

    increment_build_number_in_xcodeproj

    ENV["APP_BUILD"] = get_build_number_from_xcodeproj
    # increment_version_number_in_xcodeproj(version_number: version, scheme: name)
    # increment_build_number_in_xcodeproj(build_number: version, scheme: name)
    increment_version_number_in_xcodeproj(version_number: version)


  end

  private_lane :build do 

    build_mac_app(
      clean: true,
      silent: true,
      export_method: "mac-application",
      output_directory: ENV["BUILD_PATH"])
      
  end

  private_lane :clean do
    sh "rm -vfr ~/Library/Developer/Xcode/Archives/*"
  end


  lane :fly do


    # 1.0.8  6 auto
    # 1.1.0 7 minor
    # 1.2.0 8 minor
    # 2.0.0 9 major

    # increment_build_number_in_xcodeproj
    # increment_version_number_in_xcodeproj

    ENV["APP_BUILD"] = get_build_number_from_xcodeproj
   # increment_version_number_in_xcodeproj(bump_type: 'minor')
   # increment_version_number_in_xcodeproj(bump_type: 'major')

    UI.message ENV["APP_BUILD"]
  end


  # TEST
  lane :test do |options|
    setup
    build
    clean
    sh "cd .. && zsh ./scripts/test.sh"
  end
  
  lane :release do |options|

    name = ENV["APP_NAME"]
    tag = ENV["APP_VERSION"]

    repo = options[:repo]
    token = options[:token]

    github_release = set_github_release(
      repository_name: repo,
      api_token: token,
      name: tag,
      tag_name: tag,
      description: (File.read("../TEST.md") rescue "No changelog provided"),
      upload_assets: ["#{name}.dmg"])
      
  end

  lane :show do
    # msg = File.read("../TEST.md")
    UI.message ENV["APP_NAME"]
    UI.message ENV["APP_VERSION"]
  end
end
